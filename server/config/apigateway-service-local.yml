spring:
  application:
    name: apigateway-service

  cloud:
    gateway:
      globalcors:
        cors-configurations:
          "[/**]":
            allowedOrigins:
              - http://localhost:3000
              - http://127.0.0.1:3000
              - https://stockey.kr
            allow-credentials: true
            allowedHeaders:
              - authorization
              - content-type
              - credential
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS

      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true

      routes:
        # auth
        - id: member-service
          uri: lb://member-service
          predicates:
            - Path=/auth/logout
          filters:
            - AuthorizationHeaderFilter

        - id: member-service
          uri: lb://member-service
          predicates:
            - Path=/auth/**

        # member
        - id: member-service
          uri: lb://member-service
          predicates:
            - Path=/member/nickname
            - Method=GET

        - id: member-service
          uri: lb://member-service
          predicates:
            - Path=/member, /member/nickname
          filters:
            - AuthorizationHeaderFilter

        - id: member-service
          uri: lb://member-service
          predicates:
            - Path=/member/client/**
          filters:
            - MicroServiceFilter

        - id: member-service
          uri: lb://member-service
          predicates:
            - Path=/member/**

        # stock
        - id: stock-service
          uri: lb://stock-service
          predicates:
            - Path=/stock/my/**
          filters:
            - AuthorizationHeaderFilter

        - id: stock-service
          uri: lb://stock-service
          predicates:
            - Path=/stock/**

        # lab
        - id: laboratory-service
          uri: lb://LABORATORY-SERVICE
          predicates:
            - Path=/lab/**
          filters:
            - RewritePath=/lab/(?<segment>.*), /$\{segment}
        - id: actuator-health
          uri: lb://LABORATORY-SERVICE/actuator/health
          predicates:
            - Path=/api/actuator/health

        # industry
        - id: industry-service
          uri: lb://industry-service
          predicates:
            - Path=/industry/stocklist/my/**
          filters:
            - AuthorizationHeaderFilter

        - id: industry-service
          uri: lb://industry-service
          predicates:
            - Path=/industry/client/**
          filters:
            - MicroServiceFilter

        - id: industry-service
          uri: lb://industry-service
          predicates:
            - Path=/industry/**

        # news
        - id: news-service
          uri: lb://news-service
          predicates:
            - Path=/news/client/**
          filters:
            - MicroServiceFilter

        # favorite
        - id: favorite-service
          uri: lb://favorite-service
          predicates:
            - Path=/favorite/client/**
          filters:
            - MicroServiceFilter

        # keyword
        - id: keyword-service
          uri: lb://keyword-service
          predicates:
            - Path=/keywords/keywordlist/my/**
          filters:
            - AuthorizationHeaderFilter

        - id: keyword-service
          uri: lb://keyword-service
          predicates:
            - Path=/keywords/client/**
          filters:
            - MicroServiceFilter

        - id: keyword-service
          uri: lb://keyword-service
          predicates:
            - Path=/keywords/**

        - id: investment-service
          uri: lb://investment-service
          predicates:
            - Path=/investment/**

jwt:
  # base64? ???? ?? ?, HS512? ??? ??? ???, 512??(64???) ??? ??? ???. ?? ????
  secretKey: "{cipher}10d6a9ef3db134316645ec176d42327e9055a5b380dcbe81a2662924b154fcb38774a7be9ac48ff17d91d512a297b79dbf5f39f0e7dd318c2a23b442fefb6202f798c269c52c21e85ab9a3a1d9854014"
  access:
    expiration: 100
  refresh:
    expiration: 14400

management:
  endpoints:
    web:
      exposure:
        include: refresh, healtth, beans,httptrace, busrefresh
